<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ksh.matzips.mappers.UserMapper">
    <insert id="insertEmailAuth" parameterType="com.ksh.matzips.entities.EmailAuthEntity">
        INSERT INTO `matzips`.`email_auths` (`email`,`code`,`salt`,`created_at`,`expires_at`,`is_expired`,`is_verified`,`is_used`)
        VALUES (#{email},#{code},#{salt},#{createdAt},#{expiresAt},#{isExpired},#{isVerified},#{isUsed})
    </insert>

    <insert id="insertUser" parameterType="com.ksh.matzips.entities.UserEntity">
        INSERT INTO `matzips`.`users`(`email`,`password`,`nickname`,`created_at`,`is_admin`,`is_deleted`,`is_suspended`)
        VALUES (#{email},#{password},#{nickname},#{createdAt},#{isAdmin},#{isDeleted},#{isSuspended})
    </insert>


    <select id="selectUserByEmailCodeSalt" resultType="com.ksh.matzips.entities.EmailAuthEntity">
        SELECT `email`          AS `email`,
               `code`           AS `code`,
               `salt`           AS `salt`,
               `created_at`     AS `createdAt`,
               `expires_at`     AS `expiresAt`,
               `is_expired`     AS `isExpired`,
               `is_verified`    AS `isVerified`,
               `is_used`        AS `isUsed`
        FROM `matzips`.`email_auths`
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </select>

    <select id="selectUserByEmail" resultType="com.ksh.matzips.entities.UserEntity">
        SELECT `email`      AS `email`,
               `password`   AS `password`,
               `nickname`   AS  `nickname`,
               `created_at`   AS  `createdAt`,
               `is_admin`     AS  `isAdmin`,
               `is_deleted`   AS  `isDeleted`,
               `is_suspended` AS `isSuspended`
        FROM `matzips`.`users`
        WHERE BINARY `email` = #{email}
        LIMIT 1
    </select>

    <select id="selectUserByNickname" resultType="com.ksh.matzips.entities.UserEntity">
        SELECT `email`      AS `email`,
               `password`   AS `password`,
               `nickname`   AS  `nickname`,
               `created_at`   AS  `createdAt`,
               `is_admin`     AS  `isAdmin`,
               `is_deleted`   AS  `isDeleted`,
               `is_suspended` AS `isSuspended`
        FROM `matzips`.`users`
        WHERE BINARY `nickname` = #{nickname}
        LIMIT 1
    </select>

    <update id="updateEmailAuth" parameterType="com.ksh.matzips.entities.EmailAuthEntity">
        UPDATE `matzips`.`email_auths`
        SET `created_at`    = #{createdAt},
            `expires_at`     = #{expiresAt},
            `is_expired`     = #{isExpired},
            `is_verified`    = #{isVerified},
            `is_used`        = #{isUsed}
        WHERE BINARY `email` = #{email}
          AND BINARY `code` = #{code}
          AND BINARY `salt` = #{salt}
        LIMIT 1
    </update>
    <update id="updateUser" parameterType="com.ksh.matzips.entities.UserEntity">
        UPDATE `matzips`.`users`
        SET `password`      = #{password},
            `nickname`      = #{nickname},
            `created_at`    = #{createdAt},
            `is_admin`      = #{isAdmin},
            `is_deleted`    = #{isDeleted},
            `is_suspended`  = #{isSuspended}
        WHERE BINARY `email`= #{email}
        LIMIT 1


    </update>


</mapper>